---
name: Create Lambda

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    environment: deployment
    name: Build, publish, release, and announce
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Install node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm

      - name: Configure git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install project modules
        run: npm ci --production

      - name: Create lambda archive
        run: zip -r function.zip .

      - name: Create lambda function
        run: >
          aws lambda create-function --function-name ${{ secrets.LAMBDA_FUNCTION }} \
           --zip-file fileb://function.zip --handler handler.webhooks \
           --runtime nodejs16.x \
           --role ${{ secrets.AWS_FUNCTION_ROLE }} \
           --environment "Variables={APP_ID=${{ secrets.AWS_GHAPP_ID}},PRIVATE_KEY=${{ secrets.AWS_GHAPP_PRIVATE_KEY }},WEBHOOK_SECRET=${{ secrets.AWS_GHAPP_WEBHOOK_SECRET }}}"
      
      - name: Wait for function to be created
        run: aws lambda wait function-exists --function-name ${{ secrets.LAMBDA_FUNCTION }}

      - name: Get the arn of the created function  
        run: >
          aws lambda get-function --function-name ${{ secrets.LAMBDA_FUNCTION}} | jq  '.[0]'

      #- name: Create the rest-api for the trigger
      #  run: >
      #      aws apigatewayv2 create-api \
      #      --name $ {{ secrets.AWS_API_NAME}} \
      #      --protocol-type HTTP \
      #      --target arn[FunctionArn] 


      #- name: Set all the enviromental variables
      #  run: >
      #       aws lambda update-function-configuration --function-name ${{ secrets.LAMBDA_FUNCTION }}  \
      #aws lambda update-function-configuration --function-name my-function \
      #--environment "Variables={BUCKET=my-bucket,KEY=file.txt}"
      #-name: Create API-TRIGGER
      #   run:

      #-name: Attach API-TRIGGER to function
      #   run:
      #We have to create a new API, that as to be a REST API, security -> OPEN, API-NAME -> something like ${{ secrets.LAMBDA_FUNCTION}}-API,
      #deployment stage -> default, enable-metrics-and-error-logging -> TRUE
      # see this : https://docs.aws.amazon.com/cli/latest/reference/apigateway/create-rest-api.html
      #And then we have to attach the the API-TRIGGER to the Function
      