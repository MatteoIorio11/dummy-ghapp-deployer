name: Create Role

# Only trigger, when the build workflow succeeded
on:
  workflow_run:
    workflows: ["Update Lambda"]
    types:
      - completed

jobs:
  release:
    runs-on: ubuntu-latest
    environment: deployment
    name: Create the role for the function
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: A
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: exit 0

      - name: Configure git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create the role
        run: |
          aws iam create-role --role-name ${{ secrets.AWS_FUNCTION_ROLE }} --assume-role-policy-document '{"Version": "2012-10-17","Statement": [{ "Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}, "Action": "sts:AssumeRole"}]}' 
          aws iam attach-role-policy --role-name ${{ secrets.AWS_FUNCTION_ROLE }} --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          
      - name: Wait for role to be created
        run: aws iam wait role-exists --role-name ${{ secrets.AWS_FUNCTION_ROLE }}
  
  on-success:
    runs-on: ubuntu-latest
    environment: deployment
    name: Build, publish, release, and announce
    steps:
      - name: Checkout sources
        if: $
        run: echo "The function already exists. exit 0"
